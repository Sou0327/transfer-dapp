# Production Nginx Configuration for Cardano OTC Trading System
# Optimized for performance, security, and reliability

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=admin:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=sign:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Cache zones
proxy_cache_path /var/cache/nginx/otc levels=1:2 keys_zone=otc_cache:10m max_size=1g inactive=60m use_temp_path=off;

# Upstream backend servers
upstream otc_backend {
    least_conn;
    server app:4000 max_fails=3 fail_timeout=30s;
    # Add more backend servers for high availability
    # server app2:4000 max_fails=3 fail_timeout=30s backup;
    keepalive 32;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

# WebSocket upstream
upstream otc_websocket {
    ip_hash;  # Sticky sessions for WebSocket
    server app:4000;
    # server app2:4000 backup;
}

# GeoIP configuration (if available)
# geoip_country /usr/share/GeoIP/GeoIP.dat;
# map $geoip_country_code $allowed_country {
#     default 1;
#     CN 0;  # Block China
#     RU 0;  # Block Russia
# }ÃŸ

# Security headers map
map $sent_http_content_type $csp_header {
    default "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; frame-ancestors 'none';";
    ~image/ "";
    ~font/ "";
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # Allow Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_private_key /etc/nginx/ssl/privkey.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL Security Settings
    include /etc/nginx/ssl/ssl-security.conf;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;
    add_header Content-Security-Policy $csp_header always;
    
    # Remove server tokens
    server_tokens off;
    more_clear_headers Server;
    more_set_headers "Server: OTC-Server";
    
    # Connection and rate limiting
    limit_conn addr 50;
    limit_req zone=general burst=20 nodelay;
    
    # Basic security
    # if ($allowed_country = 0) {
    #     return 444;
    # }
    
    # Block common attack patterns
    location ~* /(wp-admin|wp-login|phpmyadmin|admin|administrator|xmlrpc\.php) {
        return 444;
    }
    
    # Block file extensions
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|bak|backup)$ {
        deny all;
        return 444;
    }
    
    # Block user agents
    if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|scanalert)) {
        return 444;
    }
    
    # Root location - serve static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ @backend;
        
        # Static file caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # Enable compression
            gzip_static on;
            
            # Security headers for static files
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }
    
    # API endpoints
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        # CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://${DOMAIN}";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        proxy_pass http://otc_backend;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Proxy timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # HTTP version and keep-alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # CORS headers
        add_header Access-Control-Allow-Origin "https://${DOMAIN}" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # Disable caching for API responses
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Admin endpoints (stricter rate limiting)
    location /api/admin/ {
        limit_req zone=admin burst=5 nodelay;
        
        # Additional IP-based restrictions for admin
        # allow 192.168.1.0/24;  # Office network
        # allow 10.0.0.0/8;      # VPN network
        # deny all;
        
        proxy_pass http://otc_backend;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for admin operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # No caching
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # Signing endpoints (very strict rate limiting)
    location /api/sign/ {
        limit_req zone=sign burst=2 nodelay;
        
        proxy_pass http://otc_backend;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for signing operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # No caching
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # Authentication endpoints
    location /api/auth/ {
        limit_req zone=auth burst=3 nodelay;
        
        proxy_pass http://otc_backend;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # No caching
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # WebSocket connections
    location /ws {
        proxy_pass http://otc_websocket;
        
        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        
        # Disable buffering for WebSocket
        proxy_buffering off;
        
        # Connection limiting
        limit_conn addr 10;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://otc_backend;
        
        # Basic proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Short timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # No caching
        add_header Cache-Control "no-cache" always;
        
        # Allow from monitoring systems
        # allow 10.0.0.0/8;     # Internal monitoring
        # allow 172.16.0.0/12;  # Docker networks
        # allow 192.168.0.0/16; # Local networks
    }
    
    # Metrics endpoint (Prometheus)
    location /metrics {
        proxy_pass http://otc_backend;
        
        # Restrict access to monitoring systems only
        allow 172.16.0.0/12;  # Docker networks
        allow 10.0.0.0/8;     # Internal networks
        deny all;
        
        # Basic proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Short timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # No caching
        add_header Cache-Control "no-cache" always;
    }
    
    # Nginx status for monitoring
    location /nginx_status {
        stub_status on;
        
        # Restrict access
        allow 172.16.0.0/12;  # Docker networks
        allow 10.0.0.0/8;     # Internal networks
        deny all;
        
        # No caching
        add_header Cache-Control "no-cache" always;
    }
    
    # Backend fallback
    location @backend {
        proxy_pass http://otc_backend;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # HTTP version
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Robots.txt
    location = /robots.txt {
        root /usr/share/nginx/html;
        log_not_found off;
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        root /usr/share/nginx/html;
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # CSP violation reporting
    location /api/csp-report {
        proxy_pass http://otc_backend;
        
        # Basic proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # No rate limiting for CSP reports
        # But log them for analysis
        access_log /var/log/nginx/csp-reports.log;
    }
    
    # Security.txt (RFC 9116)
    location /.well-known/security.txt {
        return 200 "Contact: security@${DOMAIN}\nExpires: 2024-12-31T23:59:59.000Z\nEncryption: https://${DOMAIN}/pgp-key.txt\nPreferred-Languages: en\nCanonical: https://${DOMAIN}/.well-known/security.txt\nPolicy: https://${DOMAIN}/security-policy";
        add_header Content-Type text/plain;
    }
}

# Monitoring and admin interface (optional separate subdomain)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name monitor.${DOMAIN};
    
    # SSL Configuration (same certificates)
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_private_key /etc/nginx/ssl/privkey.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL Security Settings
    include /etc/nginx/ssl/ssl-security.conf;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # IP restrictions for monitoring interface
    # allow 192.168.1.0/24;  # Office network
    # allow 10.0.0.0/8;      # VPN network
    # deny all;
    
    # Grafana
    location /grafana/ {
        proxy_pass http://grafana:3000/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Grafana
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Prometheus
    location /prometheus/ {
        proxy_pass http://prometheus:9090/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # AlertManager
    location /alertmanager/ {
        proxy_pass http://alertmanager:9093/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}