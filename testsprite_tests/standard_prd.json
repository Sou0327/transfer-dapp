{
  "meta": {
    "project": "Multi-Chain Token Transfer dApp",
    "version": "1.0.0",
    "date": "2024-06-01",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "This dApp enables users to connect MetaMask and TronLink wallets simultaneously and perform token transfers for ERC-20 and TRC-20 tokens across Ethereum and Tron blockchains with a unified interface.",
  "core_goals": [
    "Support dual wallet connections (MetaMask and TronLink) for seamless multi-chain operations.",
    "Provide real-time token balance and portfolio display for ERC-20 and TRC-20 tokens.",
    "Deliver secure, reliable unified token transfer functionality across Ethereum and Tron.",
    "Maintain encrypted, searchable, and filterable transaction history with export capabilities.",
    "Ensure a responsive, accessible user interface across devices.",
    "Implement comprehensive address and input validation specific to Ethereum and Tron chains.",
    "Provide clear network and transaction fee information for informed transfers."
  ],
  "key_features": [
    "Simultaneous management of MetaMask and TronLink wallet connections with distinct connection states and network info display.",
    "ERC-20 and TRC-20 token balance retrieval with 15-second polling updates and portfolio visualization.",
    "Unified token transfer interface supporting chain-specific token lists, input validation, and transaction processing using Ethers.js and TronWeb.",
    "Encrypted transaction history storage with filtering, searching, pagination/infinite scroll, and CSV export.",
    "Network status display including gas/energy prices and block numbers with auto-refresh every 30 seconds.",
    "Address format validation for Ethereum (0x-prefixed) and Tron (Base58 T-prefixed) with chain-specific error and warning messages.",
    "Security features including input validation, encrypted data storage, error boundaries, and safety handling of non-standard tokens.",
    "Responsive UI with dark mode, keyboard navigation, ARIA attributes, and theme management.",
    "Comprehensive testing coverage of wallet connections, transfers, and history features with proper mocking of external dependencies.",
    "Real-time transfer progress indication including transaction hashes, confirm counts, success/failure messages, and error details."
  ],
  "user_flow_summary": [
    "User visits app and is prompted to connect one or both wallets (MetaMask and TronLink).",
    "User connects wallets and views wallet addresses and network info separately for each wallet.",
    "User views balances for connected wallets' tokens which auto-update every 15 seconds.",
    "User selects chain, token, and enters recipient address and amount to initiate a transfer.",
    "System validates inputs including address formats and token compatibility before sending.",
    "User watches transfer progress with real-time feedback until transaction completion or error.",
    "Upon successful transfer, system updates balances and records transaction in encrypted history storage.",
    "User can access transaction history with filter, search, and export options.",
    "User can switch themes, navigate via keyboard, and use the app on desktop or mobile.",
    "Developer can run automated tests covering all core functionalities with mocked external wallet dependencies."
  ],
  "validation_criteria": [
    "MetaMask and TronLink connection buttons work and establish connections correctly or display installation guides if wallets are not installed.",
    "Wallet connection states update independently without cross impact and reflect account/network changes properly.",
    "Token balances for both Ethereum and Tron networks are fetched and refreshed every 15 seconds; errors show appropriate messages and retry automatically.",
    "Token transfer operations succeed for both ERC-20 and TRC-20 tokens with appropriate user notifications on success/failure.",
    "All user inputs, including addresses, amounts, and token selections, validate chain-specific formats and trigger proper error/warning messages.",
    "Transaction history can be stored encrypted locally, displayed in sorted order, filtered by multiple criteria, and exported as CSV including all necessary metadata.",
    "Network status information displays updated gas and energy prices, block numbers, and shows warnings on network congestion refreshed every 30 seconds.",
    "UI is responsive, supports dark mode toggling, keyboard navigation, ARIA standards, and works correctly on desktop and mobile devices.",
    "Non-standard token behaviors are detected and handled safely with warnings to users.",
    "Comprehensive automated tests exist for wallet connection, transfer, and history modules with external dependencies mocked.",
    "Real-time transfer progress indicators including transaction hash, confirmation count, and final status messages are shown reliably during each transfer."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Vite",
      "Ethers.js",
      "TronWeb",
      "TailwindCSS",
      "Vitest",
      "IndexedDB",
      "Web3"
    ],
    "features": [
      {
        "name": "Multi-Wallet Integration",
        "description": "MetaMaskとTronLinkの両方のウォレットを統合管理する機能",
        "files": [
          "src/contexts/MultiWalletContext.tsx",
          "src/hooks/useMultiWallet.ts",
          "src/hooks/useMetaMask.ts",
          "src/hooks/useTronLink.ts",
          "src/components/WalletConnectionPanel.tsx",
          "src/components/ConnectButton.tsx"
        ]
      },
      {
        "name": "Transfer Management",
        "description": "ERC-20とTRC-20トークンの送金機能、非標準トークン対応",
        "files": [
          "src/services/TransferService.ts",
          "src/hooks/useTransferHook.ts",
          "src/hooks/useTransfer.ts",
          "src/components/TransferForm.tsx",
          "src/components/TokenCompatibilityWarning.tsx",
          "src/utils/tokenCompatibility.ts"
        ]
      },
      {
        "name": "Balance Management",
        "description": "マルチチェーンの残高管理とポートフォリオ表示機能",
        "files": [
          "src/services/BalanceManager.ts",
          "src/hooks/useBalanceHook.ts",
          "src/hooks/useBalance.ts",
          "src/components/BalanceDisplay.tsx",
          "src/components/BalanceCard.tsx",
          "src/components/TokenPortfolio.tsx"
        ]
      },
      {
        "name": "Chain Management",
        "description": "EthereumとTronのチェーン管理とネットワーク切り替え機能",
        "files": [
          "src/services/ChainManager.ts",
          "src/hooks/useChainManager.ts",
          "src/components/ChainSwitcher.tsx",
          "src/components/NetworkSwitcher.tsx",
          "src/components/TokenSelector.tsx"
        ]
      },
      {
        "name": "Transaction History",
        "description": "暗号化されたトランザクション履歴の管理と検索機能",
        "files": [
          "src/services/HistoryStorage.ts",
          "src/services/HistoryEncryption.ts",
          "src/hooks/useHistory.ts",
          "src/components/TransactionHistory.tsx",
          "src/components/VirtualizedList.tsx"
        ]
      },
      {
        "name": "Security Features",
        "description": "セキュリティ監査、入力検証、暗号化機能",
        "files": [
          "src/hooks/useSecurity.tsx",
          "src/components/SecurityDashboard.tsx",
          "src/utils/security.ts",
          "src/utils/validation.ts",
          "src/components/ErrorBoundary.tsx"
        ]
      },
      {
        "name": "UI Components",
        "description": "再利用可能なUIコンポーネントとテーマ管理",
        "files": [
          "src/components/ThemeToggle.tsx",
          "src/components/TxToast.tsx",
          "src/components/LazyComponents.tsx",
          "src/contexts/ThemeContext.tsx",
          "src/contexts/ToastContext.tsx"
        ]
      },
      {
        "name": "Ethereum Service",
        "description": "Ethereumネットワークとの通信とトランザクション処理",
        "files": [
          "src/services/EthereumService.ts",
          "src/utils/web3.ts",
          "src/types/chain.ts"
        ]
      },
      {
        "name": "Tron Service",
        "description": "Tronネットワークとの通信とトランザクション処理",
        "files": [
          "src/services/TronService.ts",
          "src/utils/tronApiQueue.ts",
          "src/types/chain.ts"
        ]
      },
      {
        "name": "Performance Optimization",
        "description": "パフォーマンス最適化とバンドル管理機能",
        "files": [
          "src/utils/performance.ts",
          "src/utils/bundleOptimization.ts",
          "src/utils/cache.ts",
          "src/hooks/useMultipleBalances.ts"
        ]
      },
      {
        "name": "Error Handling",
        "description": "包括的なエラーハンドリングとログ機能",
        "files": [
          "src/utils/errorHandler.ts",
          "src/utils/errors.ts",
          "src/components/ErrorBoundary.tsx"
        ]
      },
      {
        "name": "Type System",
        "description": "TypeScript型定義とインターフェース",
        "files": [
          "src/types/index.ts",
          "src/types/chain.ts",
          "src/types/wallet.ts",
          "src/types/services.ts",
          "src/types/history.ts",
          "src/types/hooks.ts",
          "src/types/contexts.ts",
          "src/types/components.ts",
          "src/types/constants.ts",
          "src/types/utilities.ts"
        ]
      }
    ]
  }
}
