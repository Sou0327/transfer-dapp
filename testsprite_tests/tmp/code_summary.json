{
  "tech_stack": [
    "TypeScript",
    "React",
    "Vite",
    "Ethers.js",
    "TronWeb",
    "TailwindCSS",
    "Vitest",
    "IndexedDB",
    "Web3"
  ],
  "features": [
    {
      "name": "Multi-Wallet Integration",
      "description": "MetaMaskとTronLinkの両方のウォレットを統合管理する機能",
      "files": [
        "src/contexts/MultiWalletContext.tsx",
        "src/hooks/useMultiWallet.ts",
        "src/hooks/useMetaMask.ts",
        "src/hooks/useTronLink.ts",
        "src/components/WalletConnectionPanel.tsx",
        "src/components/ConnectButton.tsx"
      ]
    },
    {
      "name": "Transfer Management",
      "description": "ERC-20とTRC-20トークンの送金機能、非標準トークン対応",
      "files": [
        "src/services/TransferService.ts",
        "src/hooks/useTransferHook.ts",
        "src/hooks/useTransfer.ts",
        "src/components/TransferForm.tsx",
        "src/components/TokenCompatibilityWarning.tsx",
        "src/utils/tokenCompatibility.ts"
      ]
    },
    {
      "name": "Balance Management",
      "description": "マルチチェーンの残高管理とポートフォリオ表示機能",
      "files": [
        "src/services/BalanceManager.ts",
        "src/hooks/useBalanceHook.ts",
        "src/hooks/useBalance.ts",
        "src/components/BalanceDisplay.tsx",
        "src/components/BalanceCard.tsx",
        "src/components/TokenPortfolio.tsx"
      ]
    },
    {
      "name": "Chain Management",
      "description": "EthereumとTronのチェーン管理とネットワーク切り替え機能",
      "files": [
        "src/services/ChainManager.ts",
        "src/hooks/useChainManager.ts",
        "src/components/ChainSwitcher.tsx",
        "src/components/NetworkSwitcher.tsx",
        "src/components/TokenSelector.tsx"
      ]
    },
    {
      "name": "Transaction History",
      "description": "暗号化されたトランザクション履歴の管理と検索機能",
      "files": [
        "src/services/HistoryStorage.ts",
        "src/services/HistoryEncryption.ts",
        "src/hooks/useHistory.ts",
        "src/components/TransactionHistory.tsx",
        "src/components/VirtualizedList.tsx"
      ]
    },
    {
      "name": "Security Features",
      "description": "セキュリティ監査、入力検証、暗号化機能",
      "files": [
        "src/hooks/useSecurity.tsx",
        "src/components/SecurityDashboard.tsx",
        "src/utils/security.ts",
        "src/utils/validation.ts",
        "src/components/ErrorBoundary.tsx"
      ]
    },
    {
      "name": "UI Components",
      "description": "再利用可能なUIコンポーネントとテーマ管理",
      "files": [
        "src/components/ThemeToggle.tsx",
        "src/components/TxToast.tsx",
        "src/components/LazyComponents.tsx",
        "src/contexts/ThemeContext.tsx",
        "src/contexts/ToastContext.tsx"
      ]
    },
    {
      "name": "Ethereum Service",
      "description": "Ethereumネットワークとの通信とトランザクション処理",
      "files": [
        "src/services/EthereumService.ts",
        "src/utils/web3.ts",
        "src/types/chain.ts"
      ]
    },
    {
      "name": "Tron Service",
      "description": "Tronネットワークとの通信とトランザクション処理",
      "files": [
        "src/services/TronService.ts",
        "src/utils/tronApiQueue.ts",
        "src/types/chain.ts"
      ]
    },
    {
      "name": "Performance Optimization",
      "description": "パフォーマンス最適化とバンドル管理機能",
      "files": [
        "src/utils/performance.ts",
        "src/utils/bundleOptimization.ts",
        "src/utils/cache.ts",
        "src/hooks/useMultipleBalances.ts"
      ]
    },
    {
      "name": "Error Handling",
      "description": "包括的なエラーハンドリングとログ機能",
      "files": [
        "src/utils/errorHandler.ts",
        "src/utils/errors.ts",
        "src/components/ErrorBoundary.tsx"
      ]
    },
    {
      "name": "Type System",
      "description": "TypeScript型定義とインターフェース",
      "files": [
        "src/types/index.ts",
        "src/types/chain.ts",
        "src/types/wallet.ts",
        "src/types/services.ts",
        "src/types/history.ts",
        "src/types/hooks.ts",
        "src/types/contexts.ts",
        "src/types/components.ts",
        "src/types/constants.ts",
        "src/types/utilities.ts"
      ]
    }
  ]
} 